#!/bin/bash
# Eden MCP Merge - Combine MCP servers from trunk and branches
set -e

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Check if jq is installed
if ! command -v jq >/dev/null 2>&1; then
    echo -e "${RED}✗${NC} jq is required but not installed"
    echo "Install with: sudo pacman -S jq  # or brew install jq"
    exit 1
fi

# Find Eden root - works even when called via symlink
if [[ -n "$EDEN_ROOT" ]]; then
    # User set EDEN_ROOT explicitly
    :
else
    # Try to find Eden root from script location (handles symlinks)
    SCRIPT_PATH="$(readlink -f "${BASH_SOURCE[0]}")"
    CANDIDATE="$(cd "$(dirname "$SCRIPT_PATH")/../../../.." && pwd)"
    if [[ -f "$CANDIDATE/manifest.yaml" ]]; then
        EDEN_ROOT="$CANDIDATE"
    elif [[ -d "$HOME/Development/eden" ]] && [[ -f "$HOME/Development/eden/manifest.yaml" ]]; then
        EDEN_ROOT="$HOME/Development/eden"
    else
        echo -e "${RED}✗${NC} Could not find Eden root. Set EDEN_ROOT environment variable."
        exit 1
    fi
fi

BRANCHES_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/eden/branches"
OUTPUT_FILE="$HOME/.cursor/mcp.json"

echo ""
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${BLUE}  Eden MCP Merge${NC}"
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo ""

# Start with trunk config
TRUNK_CONFIG="$EDEN_ROOT/packages/common/.config/cursor/mcp_config.json"

if [[ ! -f "$TRUNK_CONFIG" ]]; then
    echo -e "${RED}✗${NC} Trunk MCP config not found: $TRUNK_CONFIG"
    exit 1
fi

echo -e "${GREEN}▸${NC} Starting with trunk config..."

# Initialize merged config
MERGED_JSON=$(cat "$TRUNK_CONFIG")

# Find and merge branch configs
if [[ -f "$BRANCHES_FILE" ]]; then
    while IFS= read -r branch_path; do
        [[ -z "$branch_path" ]] && continue
        [[ "$branch_path" =~ ^[[:space:]]*# ]] && continue
        
        branch_name=$(basename "$branch_path")
        branch_config="$branch_path/packages/common/.config/cursor/mcp_config.branch.json"
        
        if [[ -f "$branch_config" ]]; then
            echo -e "${GREEN}▸${NC} Merging MCP servers from: ${BLUE}$branch_name${NC}"
            
            # Merge mcpServers from branch into merged config
            MERGED_JSON=$(echo "$MERGED_JSON" | jq --slurpfile branch "$branch_config" \
                '.mcpServers += $branch[0].mcpServers')
        fi
    done < "$BRANCHES_FILE"
fi

# Ensure output directory exists
mkdir -p "$(dirname "$OUTPUT_FILE")"

# Write merged config
echo "$MERGED_JSON" | jq '.' > "$OUTPUT_FILE"

echo ""
echo -e "${GREEN}✓${NC} MCP config merged to: ${BLUE}$OUTPUT_FILE${NC}"
echo ""

# Show summary
SERVER_COUNT=$(echo "$MERGED_JSON" | jq '.mcpServers | length')
echo "MCP Servers configured: $SERVER_COUNT"
echo "$MERGED_JSON" | jq -r '.mcpServers | keys[]' | while read -r server; do
    echo "  • $server"
done

echo ""
echo -e "${YELLOW}⚠${NC}  Restart Cursor to load the updated configuration"
echo ""

