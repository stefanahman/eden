#!/bin/bash
# graft-git - Integrate git configs from branches
# Part of Eden's pluggable grafter system
set -e

# Detect Eden root from script location
if [[ -z "$EDEN_ROOT" ]]; then
    SCRIPT_PATH="$(readlink -f "${BASH_SOURCE[0]}" 2>/dev/null || echo "${BASH_SOURCE[0]}")"
    EDEN_ROOT="$(cd "$(dirname "$SCRIPT_PATH")/../../../../.." && pwd)"
fi

BRANCHES_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/eden/branches"

# Check if branches file exists
if [ ! -f "$BRANCHES_FILE" ]; then
    echo "  → No branches registered (skipping)"
    exit 0
fi

# Expand variables in branch path
expand_branch_path() {
    local path="$1"
    # Expand $EDEN_ROOT
    path="${path//\$EDEN_ROOT/$EDEN_ROOT}"
    # Expand tilde
    path="${path/#\~/$HOME}"
    echo "$path"
}

gitconfig_local="${XDG_CONFIG_HOME:-$HOME/.config}/eden/local/gitconfig"
added=0
skipped=0

# Create gitconfig if it doesn't exist
if [ ! -f "$gitconfig_local" ]; then
    mkdir -p "$(dirname "$gitconfig_local")"
    cat > "$gitconfig_local" << 'EOF'
# Local git configuration - MACHINE-SPECIFIC
# This file routes to context-specific configs based on directory
# Auto-generated by 'eden graft'

EOF
    echo "  → Created gitconfig at $gitconfig_local"
fi

# Read each branch repo path
while IFS= read -r branch_path || [ -n "$branch_path" ]; do
    # Skip empty lines and comments
    [[ -z "$branch_path" || "$branch_path" =~ ^[[:space:]]*# ]] && continue
    
    # Expand variables and tilde
    branch_path=$(expand_branch_path "$branch_path")
    
    if [ ! -d "$branch_path" ]; then
        continue
    fi
    
    # Look for gitconfig.* files in the branch
    config_dir="$branch_path/.config/eden/local"
    if [ -d "$config_dir" ]; then
        for config_file in "$config_dir"/gitconfig.*; do
            [ -e "$config_file" ] || continue
            
            # Extract context name (e.g., "bardo" from "gitconfig.bardo")
            context=$(basename "$config_file" | sed 's/^gitconfig\.//')
            
            # Check if this context is already in gitconfig
            if grep -q "gitconfig\.$context" "$gitconfig_local"; then
                echo "  ✓ $context (already grafted)"
                skipped=$((skipped + 1))
                continue
            fi
            
            # Suggest directory based on context name
            suggested_dir="~/Development/$context/"
            
            # Add includeIf directive
            cat >> "$gitconfig_local" << EOF

# $context context
[includeIf "gitdir:$suggested_dir"]
	path = ~/.config/eden/local/gitconfig.$context
EOF
            
            echo "  → Grafted: $context → $suggested_dir"
            added=$((added + 1))
        done
    fi
done < "$BRANCHES_FILE"

# Report results
if [ $added -gt 0 ]; then
    echo "  → Grafted $added new git context(s)"
    [ $skipped -gt 0 ] && echo "  → Skipped $skipped already grafted"
elif [ $skipped -gt 0 ]; then
    echo "  → All $skipped git context(s) already grafted"
else
    echo "  → No git contexts found in branches"
fi

exit 0

