#!/usr/bin/env bash
# Eden CLI - Smart wrapper for persistent availability
# This wrapper is installed to ~/.local/bin/eden and works before/after stow/unstow
# It always calls the latest version from the Eden repository

set -euo pipefail

# Find the Eden repository
# Strategy: Check config file first (set by install.sh), then environment variable

EDEN_REPO=""

# 1) Check XDG config location (set during installation)
EDEN_CONFIG_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/eden/repo"
if [ -f "$EDEN_CONFIG_PATH" ]; then
    EDEN_REPO="$(cat "$EDEN_CONFIG_PATH" 2>/dev/null | head -n1)"
fi

# 2) Fall back to environment variable
if [ -z "$EDEN_REPO" ] || [ ! -d "$EDEN_REPO" ]; then
    EDEN_REPO="${EDEN_REPO:-}"
fi

# Validate and delegate to the real eden binary
if [ -n "$EDEN_REPO" ] && [ -f "$EDEN_REPO/bin/eden" ]; then
    exec "$EDEN_REPO/bin/eden" "$@"
fi

# Error: couldn't find the repo
echo "Error: Could not locate the Eden repository." >&2
echo "" >&2
echo "Please run the installer to set up Eden properly:" >&2
echo "  cd /path/to/eden && ./install.sh" >&2
echo "" >&2
echo "Or manually configure the repo path:" >&2
echo "  mkdir -p \"${XDG_CONFIG_HOME:-$HOME/.config}/eden\"" >&2
echo "  echo '/path/to/eden' > \"${XDG_CONFIG_HOME:-$HOME/.config}/eden/repo\"" >&2
echo "" >&2
echo "Or set EDEN_REPO for this session:" >&2
echo "  export EDEN_REPO='/path/to/eden'" >&2
exit 1
